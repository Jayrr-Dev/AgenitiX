{
  "enabled": true,
  "name": "Manual Comprehensive Quality Check",
  "description": "On-demand comprehensive code quality check that combines Biome, TypeScript, and security analysis. Triggered manually when you want to perform a thorough code review.",
  "version": "1",
  "when": {
    "type": "manual",
    "buttonText": "üîç Run Full Quality Check",
    "buttonDescription": "Comprehensive Biome + TypeScript + Security Analysis"
  },
  "then": {
    "type": "askAgent",
    "prompt": "Please perform a comprehensive manual code quality check across the entire project. This is a thorough analysis that should cover:\n\n## 1. PROJECT-WIDE BIOME ANALYSIS\n- Run `pnpm lint` to check all files for Biome violations\n- Run `pnpm lint:fix` to auto-fix what's possible\n- Generate a report of remaining issues by file and category\n- Focus on naming convention violations (components, hooks, utilities)\n- Check import organization and code formatting consistency\n\n## 2. TYPESCRIPT COMPILATION CHECK\n- Run full TypeScript compilation check across the project\n- Identify all type errors, missing types, and compilation issues\n- Check for:\n  - Strict mode compliance\n  - Proper type definitions for all functions and variables\n  - Correct React component prop types\n  - Proper async/await typing\n  - Generic type usage\n  - Interface vs type usage consistency\n\n## 3. COMPREHENSIVE SECURITY AUDIT\nPerform deep security analysis:\n- **Authentication & Authorization**:\n  - Review Convex auth implementation\n  - Check session management and token handling\n  - Verify proper user permission checks\n- **Input Validation & Sanitization**:\n  - Check all user inputs for validation\n  - Verify data sanitization before database storage\n  - Review form validation patterns\n- **XSS & Injection Prevention**:\n  - Check for unsafe HTML rendering\n  - Verify proper output encoding\n  - Review database query patterns for injection risks\n- **Data Protection**:\n  - Check for sensitive data exposure in logs\n  - Verify environment variable usage\n  - Review API response data filtering\n- **API Security**:\n  - Check API route authentication\n  - Verify CORS configuration\n  - Review rate limiting implementation\n- **Dependencies**:\n  - Check for known vulnerabilities in dependencies\n  - Review third-party integrations for security\n\n## 4. ARCHITECTURE & BEST PRACTICES REVIEW\n- **Project Structure**: Verify adherence to DDD and feature-based organization\n- **Component Patterns**: Check React component best practices\n- **State Management**: Review Zustand store patterns and usage\n- **Database Patterns**: Verify Convex schema and query patterns\n- **Performance**: Identify potential performance bottlenecks\n- **Testing**: Identify areas lacking test coverage\n- **Documentation**: Check for missing or outdated documentation\n\n## 5. NODE DOMAIN SPECIFIC CHECKS\n- **NodeSpec Compliance**: Verify all nodes follow NodeSpec patterns\n- **Type Safety**: Check node data schemas and validation\n- **Handle Definitions**: Verify proper input/output handle configurations\n- **Inspector Integration**: Check node inspector implementations\n- **Runtime Execution**: Verify node execution patterns\n\n## 6. DETAILED REPORTING\nProvide a comprehensive report with:\n- **Executive Summary**: Overall code health score and key metrics\n- **Critical Issues**: Security vulnerabilities and blocking errors\n- **Code Quality Metrics**: Complexity, maintainability, test coverage\n- **File-by-File Analysis**: Detailed breakdown of issues per file\n- **Improvement Roadmap**: Prioritized list of recommended fixes\n- **Best Practice Violations**: Areas not following AgenitiX standards\n\n## EXECUTION APPROACH\n1. Start with automated tools (Biome, TypeScript compiler)\n2. Perform manual code review of critical areas\n3. Focus extra attention on security-sensitive code\n4. Provide specific, actionable recommendations\n5. Include code examples for complex fixes\n6. Prioritize issues by severity and impact\n\nThis is a thorough analysis - take your time to provide comprehensive, actionable results."
  }
}