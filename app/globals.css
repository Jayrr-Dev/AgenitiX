@import 'tailwindcss';

/* === Google Fonts === */
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&family=Work+Sans:wght@400;600&family=Source+Serif+Pro:ital,wght@0,400;1,400&display=swap')
layer(utilities);

@custom-variant dark (&:is(.dark *));

@theme {
  --radius-lg: var(--radius);
  /* Font */
  --font-sans: var(--font-sans);
  --font-ui: var(--font-ui);
  --font-serif: var(--font-serif);
  --font-brand: var(--font-sans);

  /* Colors */
  --color-background: hsl(var(--background));
  --color-foreground: hsl(var(--foreground));
  --color-primary: hsl(var(--primary));
  --color-primary-fg: hsl(var(--primary-foreground));
  --color-secondary: hsl(var(--secondary));
  --color-secondary-fg: hsl(var(--secondary-foreground));
  --color-muted: hsl(var(--muted));
  --color-muted-fg: hsl(var(--muted-foreground));
  --color-accent: hsl(var(--accent));
  --color-accent-fg: hsl(var(--accent-foreground));
  --color-border: hsl(var(--border));
  --color-ring: hsl(var(--ring));
  --color-destructive: hsl(var(--destructive));
  --color-destructive-fg: hsl(var(--destructive-foreground));

  /* Animation */

 
    --animate-fill-transparency: fill-transparency 2s forwards;
    /* Put this OUTSIDE @theme – @theme is only for tokens */
    @keyframes fill-transparency {
      0% {
        --fill-transparency-left: 0%;
        --fill-transparency-right: 100%;
      }
      100% {
        --fill-transparency-left: 100%;
        --fill-transparency-right: 0%;
      }
    }

  --animate-rotate-border: rotate-border 3s linear infinite;
  @keyframes rotate-border {
    0%   { --angle: 0deg; }s
    100% { --angle: 360deg; }
  };

  --animate-fill-left-border: fill-left-border 1s linear forwards;
  @keyframes fill-left-border {
    0%   { --fill-angle: 180deg; }
    100% { --fill-angle: 0deg; }
  };

  --animate-fill-right-border: fill-right-border 1s linear forwards;
  @keyframes fill-right-border {
    0%   { --fill-angle: 0deg; }
    100% { --fill-angle: 180deg; }
  };
 
}

  @property --fill-transparency-left {
    /* syntax: '<percentage>'; */
    syntax: '<percentage>';
    inherits: true;
    initial-value: 0%;
  }

  @property --fill-transparency-right {
    /* syntax: '<percentage>'; */
    syntax: '<percentage>';
    inherits: true;
    initial-value: 100%;
  }


  @property --fill-angle-right {
    syntax: '<angle>';
    inherits: true;
    initial-value: 180deg;
  }

  @property --fill-angle-left {
    syntax: '<angle>';
    inherits: true;
    initial-value: 180deg;
  }


@property --angle {
  syntax: '<angle>';
  inherits: true;
  initial-value: 0deg;
}

@utility bg-spinning-border {
  background:
    conic-gradient(from var(--angle), #213, #112 5%, #112 60%, #213 95%) padding-box,
    conic-gradient(from var(--angle), transparent 25%, #08f, #f03 95%, transparent) border-box,
    conic-gradient(from var(--angle), #213, #112 5%, #112 60%, #213 95%) border-box;
}

@utility bg-fill-border {
  background:
    linear-gradient(background, background) padding-box,
   
    conic-gradient(from var(--fill-angle-right), transparent var(--fill-transparency-right), #08f, #f03 100%, transparent) border-box,
   
    conic-gradient(from var(--fill-angle-left), #f03, #08f,  transparent var(--fill-transparency-left)) border-box,
     
    conic-gradient(from var(--fill-angle-left), #213, #112 5%, #112 60%, #213 95%) border-box;
}

@utility bg-fill-content {
  background:
   
    conic-gradient(from var(--fill-angle-right), transparent var(--fill-transparency-right), #08f, #f03 100%, transparent) border-box,
   
    conic-gradient(from var(--fill-angle-left), #f03, #08f,  transparent var(--fill-transparency-left)) border-box,
     
    conic-gradient(from var(--fill-angle-left), #213, #112 5%, #112 60%, #213 95%) border-box;
}


@utility container {
  margin-inline: auto;
  padding-inline: 2rem;
  @media (width >= --theme(--breakpoint-sm)) {
    max-width: none;
  }
  @media (width >= 1400px) {
    max-width: 1400px;
  }
}

/*
  The default border color has changed to `currentcolor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentcolor);
  }
}

/* === Design Tokens (dark-first, lighter black) === */
@layer base {
  :root {         /* default = dark */
    --font-sans : 'Inter', system-ui, sans-serif;
    --font-ui   : 'Work Sans', sans-serif;
    --font-serif: 'Source Serif Pro', serif;

    /* lighter “Vercel black” */
    --background: 0 0% 6%;    /* #111 */
    --foreground: 0 0% 98%;   /* #fafafa */

    --primary          : 0 0% 98%;
    --primary-foreground: 0 0% 6%;

    --secondary          : 210 100% 54%;   /* electric blue */
    --secondary-foreground: 0 0% 100%;

    --muted : 0 0% 18%;   /* #2e2e2e for cards */
    --muted-foreground: 0 0% 70%;

    --border : var(--muted);
    --input  : var(--muted);
    --ring   : var(--secondary);

    --radius : 0.5rem;
  }

  /* light override */
  .light {
    --background: 0 0% 100%;
    --foreground: 222 47% 11%;
    --primary   : 222 47% 11%;
    --primary-foreground: 0 0% 100%;

    --muted : 0 0% 96%;
    --muted-foreground: 222 10% 45%;
    --border: 220 14% 91%;
    --input : 220 14% 91%;
  }

  *    { @apply border-border; }
  body { @apply bg-background text-foreground antialiased; }

  .font-ui    { font-family: var(--font-ui); }
  .font-serif { font-family: var(--font-serif); }
  .font-brand { font-family: var(--font-sans); font-weight:700; }
}

/* @layer utilities {
  .text-brand {
    @apply tex bg-clip-text text-transparent;
  }
} */
