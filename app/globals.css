/* =====================================================================
   global.css — Tailwind v4 + conic-border animations (Vercel-safe)
   ===================================================================== */

/* 1 · Tailwind & Google Fonts --------------------------------------- */
@import 'tailwindcss';
@import '@xyflow/react/dist/style.css';
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&family=Work+Sans:wght@400;600&family=Source+Serif+Pro:ital,wght@0,400;1,400&display=swap')
  layer(utilities);
/* Scrollbar plugin plus customizations */
@plugin 'tailwind-scrollbar';

/* Custom scrollbar styles, 2px wide, rounded, no arrows */
.scrollbar {
  scrollbar-width: 1px;
  scrollbar-color: rgb(156 163 175)
}

.scrollbar::-webkit-scrollbar {
  width: 1px;
  height: 1px;
}

.scrollbar::-webkit-scrollbar-track {
  background: transparent;
}

.scrollbar::-webkit-scrollbar-thumb {
  background-color: rgb(156 163 175);
  border-radius: 9999px;
}

.scrollbar::-webkit-scrollbar-thumb:hover {
  background-color: rgb(107 114 128);
}

/* Hide scrollbar arrows */
.scrollbar::-webkit-scrollbar-button {
  display: none;
}







/* 2 · Custom-property registration (only animating vars) ------------ */
/* 1% FUCK THIS BUG */
@property --fill-transparency-left  { syntax:'<percentage>'; inherits:true; initial-value:1%;}
@property --fill-transparency-right { syntax:'<percentage>'; inherits:true; initial-value:100%; }
@property --fill-angle-left         { syntax:'<angle>';      inherits:true; initial-value:180deg; }
@property --fill-angle-right        { syntax:'<angle>';      inherits:true; initial-value:180deg; }
@property --angle                   { syntax:'<angle>';      inherits:true; initial-value:0deg;  }

/* 3 · Theme tokens -------------------------------------------------- */
@theme {
  --font-sans  : 'Inter', system-ui, sans-serif;
  --font-ui    : 'Work Sans', sans-serif;
  --font-serif : 'Source Serif Pro', serif;
  --font-brand : var(--font-sans);

  --radius-lg  : 0.5rem;

  /* dark-first palette */
  --background           : 0 0% 6%;
  --foreground           : 0 0% 98%;
  --primary              : 0 0% 98%;
  --primary-foreground   : 0 0% 6%;
  --secondary            : 210 100% 54%;
  --secondary-foreground : 0 0% 100%;
  --muted                : 0 0% 18%;
  --muted-foreground     : 0 0% 70%;
  --border               : var(--muted);
  --accent               : 0 0% 24%;
  --accent-foreground    : 0 0% 98%;
  --destructive          : 0 84% 60%;
  --destructive-foreground : 0 0% 98%;
  --ring                 : 0 0% 83%;
  --card                 : 0 0% 8%;
  --card-foreground      : 0 0% 98%;
  --popover              : 0 0% 8%;
  --popover-foreground   : 0 0% 98%;

  /* NEW: Node category tokens */
  --node-create-bg: 210 100% 97%;
  --node-create-bg-hover: 210 100% 95%;
  --node-create-border: 210 100% 85%;
  --node-create-border-hover: 210 100% 80%;
  --node-create-text: 210 100% 20%;
  --node-create-text-secondary: 210 80% 30%;

  --node-view-bg: 0 0% 97%;
  --node-view-bg-hover: 0 0% 95%;
  --node-view-border: 0 0% 85%;
  --node-view-border-hover: 0 0% 80%;
  --node-view-text: 0 0% 20%;
  --node-view-text-secondary: 0 0% 30%;

  --node-trigger-bg: 280 100% 97%;
  --node-trigger-bg-hover: 280 100% 95%;
  --node-trigger-border: 280 100% 85%;
  --node-trigger-border-hover: 280 100% 80%;
  --node-trigger-text: 280 100% 20%;
  --node-trigger-text-secondary: 280 80% 30%;

  --node-test-bg: 45 100% 97%;
  --node-test-bg-hover: 45 100% 95%;
  --node-test-border: 45 100% 85%;
  --node-test-border-hover: 45 100% 80%;
  --node-test-text: 45 100% 20%;
  --node-test-text-secondary: 45 80% 30%;

  /* NEW: Infrastructure component tokens with states */
  --infra-inspector-bg: var(--card);
  --infra-inspector-bg-hover: var(--accent);
  --infra-inspector-bg-active: var(--muted);
  --infra-inspector-border: var(--border);
  --infra-inspector-border-hover: var(--ring);
  --infra-inspector-text: var(--card-foreground);
  --infra-inspector-text-secondary: var(--muted-foreground);

  --infra-sidebar-bg: var(--muted);
  --infra-sidebar-bg-hover: var(--accent);
  --infra-sidebar-bg-active: var(--card);
  --infra-sidebar-border: var(--border);
  --infra-sidebar-border-hover: var(--ring);
  --infra-sidebar-text: var(--muted-foreground);
  --infra-sidebar-text-secondary: var(--muted-foreground);

  --infra-minimap-bg: var(--background);
  --infra-minimap-bg-hover: var(--muted);
  --infra-minimap-border: var(--border);
  --infra-minimap-border-hover: var(--ring);
  --infra-minimap-text: var(--foreground);

  --infra-history-bg: var(--card);
  --infra-history-bg-hover: var(--accent);
  --infra-history-border: var(--border);
  --infra-history-border-hover: var(--ring);
  --infra-history-text: var(--card-foreground);

  --infra-toolbar-bg: var(--card);
  --infra-toolbar-bg-hover: var(--accent);
  --infra-toolbar-border: var(--border);
  --infra-toolbar-border-hover: var(--ring);
  --infra-toolbar-text: var(--card-foreground);

  --infra-panel-bg: var(--muted);
  --infra-panel-bg-hover: var(--accent);
  --infra-panel-border: var(--border);
  --infra-panel-border-hover: var(--ring);
  --infra-panel-text: var(--muted-foreground);

  /* NEW: Effect tokens for glow effects */
  --effect-glow-selection: 0 0 4px 1px rgba(255,255,255,0.6);
  --effect-glow-hover: 0 0 3px 0px rgba(255,255,255,0.1);
  --effect-glow-activation: 0 0 8px 2px rgba(34,197,94,0.8);
  --effect-glow-error: 0 0 8px 2px rgba(239,68,68,0.8);
  --effect-glow-subtle: 0 0 4px 1px rgba(255,255,255,0.4);
  --effect-glow-normal: 0 0 8px 2px rgba(255,255,255,0.8);
  --effect-glow-strong: 0 0 12px 3px rgba(255,255,255,1.0);
  --effect-glow-blue: 0 0 8px 2px rgba(59,130,246,0.8);
  --effect-glow-green: 0 0 8px 2px rgba(34,197,94,0.8);
  --effect-glow-red: 0 0 8px 2px rgba(239,68,68,0.8);

  /* NEW: Action status tokens for HistoryPanel */
  --status-node-add-bg: 120 100% 95%;
  --status-node-add-border: 120 100% 80%;
  --status-node-delete-bg: 0 100% 95%;
  --status-node-delete-border: 0 100% 80%;
  --status-node-update-bg: 210 100% 95%;
  --status-node-update-border: 210 100% 80%;
  --status-edge-add-bg: 120 80% 95%;
  --status-edge-add-border: 120 80% 80%;
  --status-edge-delete-bg: 0 80% 95%;
  --status-edge-delete-border: 0 80% 80%;
  --status-bulk-update-bg: 45 100% 95%;
  --status-bulk-update-border: 45 100% 80%;
  --status-special-bg: 280 100% 95%;
  --status-special-border: 280 100% 80%;

  /* NEW: Sizing tokens for nodes */
  --node-size-fe1h-width: 240px;
  --node-size-fe1h-height: 120px;
  --node-size-compact-width: 180px;
  --node-size-compact-height: 80px;
  --node-size-expanded-width: 320px;
  --node-size-expanded-height: 160px;
  --node-size-default-width: 200px;
  --node-size-default-height: 100px;

  /* shorthand animations */
  --animate-fill-transparency :
      fill-left-transparency  2s forwards,
      fill-right-transparency 2s forwards;
  --animate-rotate-border     : rotate-border 3s linear infinite;
  
  --animate-scroll-x: scroll-x var(--ticker-duration, 40s) linear infinite;

  --animate-scroll-x-rewind: scroll-x-rewind var(--ticker-duration, 40s ) linear infinite;

  --animate-scroll: scroll var(--animation-duration, 80s) var(--animation-direction, forwards) linear infinite;

  --animate-vert-scroll: vert-scroll var(--animation-duration, 80s) var(--animation-direction, forwards) linear infinite;

}



/* 4 · Keyframes ----------------------------------------------------- */
@layer utilities {
  @keyframes rotate-border { from { --angle: 0deg; } to { --angle: 360deg; } }
  @keyframes scroll-x {
    0%   { transform: translateX(0) }
    100% { transform: translateX(-50%) }
  }

  @keyframes scroll-x-loop {
    from { transform: translateX(0)     }
    to   { transform: translateX(-50%) } /* exactly half width */
  }

  @keyframes scroll {
    to {
      transform: translate(calc(-50% - 0.5rem));
    }
  }
  
  @keyframes vert-scroll {
    0%   { transform: translateY(0%);   }
    100% { transform: translateY(-50%); }
  }
  
  @keyframes scroll-x-rewind {
    0%   { transform: translateX(0) }      /* logos start flush left */
    98%  { transform: translateX(-50%) }   /* just before the end       */
    99%  { transform: translateX(-50%) }   /* hold for one frame        */
    100% { transform: translateX(0) }      /* snap back to beginning    */
  }

  @keyframes scroll-x {
    0%   { transform: translateX(0) }
    100% { transform: translateX(-50%) }
  }


  @keyframes fill-left-transparency  { from { --fill-transparency-left : 0%; } to { --fill-transparency-left :100%; } }
  @keyframes fill-right-transparency { from { --fill-transparency-right:100%; } to { --fill-transparency-right: 0%; } }
}

/* 5 · Utility classes (top-level, v4-safe) -------------------------- */
/* token helpers */
@utility bg-background   { background-color: hsl(var(--background)); }
@utility text-foreground { color          : hsl(var(--foreground)); }
@utility border-border   { border-color   : hsl(var(--border));     }

/* Primary colors */
@utility bg-primary      { background-color: hsl(var(--primary)); }
@utility text-primary    { color          : hsl(var(--primary)); }
@utility border-primary  { border-color   : hsl(var(--primary)); }
@utility bg-primary-foreground  { background-color: hsl(var(--primary-foreground)); }
@utility text-primary-foreground { color          : hsl(var(--primary-foreground)); }

/* Secondary colors */
@utility bg-secondary    { background-color: hsl(var(--secondary)); }
@utility text-secondary  { color          : hsl(var(--secondary)); }
@utility border-secondary { border-color   : hsl(var(--secondary)); }
@utility bg-secondary-foreground  { background-color: hsl(var(--secondary-foreground)); }
@utility text-secondary-foreground { color          : hsl(var(--secondary-foreground)); }

/* Muted colors */
@utility bg-muted        { background-color: hsl(var(--muted)); }
@utility text-muted      { color          : hsl(var(--muted)); }
@utility border-muted    { border-color   : hsl(var(--muted)); }
@utility bg-muted-foreground  { background-color: hsl(var(--muted-foreground)); }
@utility text-muted-foreground { color          : hsl(var(--muted-foreground)); }

/* Accent colors */
@utility bg-accent       { background-color: hsl(var(--accent)); }
@utility text-accent     { color          : hsl(var(--accent)); }
@utility border-accent   { border-color   : hsl(var(--accent)); }
@utility bg-accent-foreground  { background-color: hsl(var(--accent-foreground)); }
@utility text-accent-foreground { color          : hsl(var(--accent-foreground)); }

/* Card colors */
@utility bg-card         { background-color: hsl(var(--card)); }
@utility text-card       { color          : hsl(var(--card)); }
@utility border-card     { border-color   : hsl(var(--card)); }
@utility bg-card-foreground  { background-color: hsl(var(--card-foreground)); }
@utility text-card-foreground { color          : hsl(var(--card-foreground)); }

/* Destructive colors */
@utility bg-destructive  { background-color: hsl(var(--destructive)); }
@utility text-destructive { color          : hsl(var(--destructive)); }
@utility border-destructive { border-color   : hsl(var(--destructive)); }
@utility bg-destructive-foreground  { background-color: hsl(var(--destructive-foreground)); }
@utility text-destructive-foreground { color          : hsl(var(--destructive-foreground)); }

/* Popover colors */
@utility bg-popover      { background-color: hsl(var(--popover)); }
@utility text-popover    { color          : hsl(var(--popover)); }
@utility border-popover  { border-color   : hsl(var(--popover)); }
@utility bg-popover-foreground  { background-color: hsl(var(--popover-foreground)); }
@utility text-popover-foreground { color          : hsl(var(--popover-foreground)); }

/* NEW: Node category utilities */
/* Create node utilities */
@utility bg-node-create { background-color: hsl(var(--node-create-bg)); }
@utility bg-node-create-hover { background-color: hsl(var(--node-create-bg-hover)); }
@utility border-node-create { border-color: hsl(var(--node-create-border)); }
@utility border-node-create-hover { border-color: hsl(var(--node-create-border-hover)); }
@utility text-node-create { color: hsl(var(--node-create-text)); }
@utility text-node-create-secondary { color: hsl(var(--node-create-text-secondary)); }

/* View node utilities */
@utility bg-node-view { background-color: hsl(var(--node-view-bg)); }
@utility bg-node-view-hover { background-color: hsl(var(--node-view-bg-hover)); }
@utility border-node-view { border-color: hsl(var(--node-view-border)); }
@utility border-node-view-hover { border-color: hsl(var(--node-view-border-hover)); }
@utility text-node-view { color: hsl(var(--node-view-text)); }
@utility text-node-view-secondary { color: hsl(var(--node-view-text-secondary)); }

/* Trigger node utilities */
@utility bg-node-trigger { background-color: hsl(var(--node-trigger-bg)); }
@utility bg-node-trigger-hover { background-color: hsl(var(--node-trigger-bg-hover)); }
@utility border-node-trigger { border-color: hsl(var(--node-trigger-border)); }
@utility border-node-trigger-hover { border-color: hsl(var(--node-trigger-border-hover)); }
@utility text-node-trigger { color: hsl(var(--node-trigger-text)); }
@utility text-node-trigger-secondary { color: hsl(var(--node-trigger-text-secondary)); }

/* Test node utilities */
@utility bg-node-test { background-color: hsl(var(--node-test-bg)); }
@utility bg-node-test-hover { background-color: hsl(var(--node-test-bg-hover)); }
@utility border-node-test { border-color: hsl(var(--node-test-border)); }
@utility border-node-test-hover { border-color: hsl(var(--node-test-border-hover)); }
@utility text-node-test { color: hsl(var(--node-test-text)); }
@utility text-node-test-secondary { color: hsl(var(--node-test-text-secondary)); }

/* NEW: Infrastructure component utilities */
/* Inspector utilities */
@utility bg-infra-inspector { background-color: hsl(var(--infra-inspector-bg)); }
@utility bg-infra-inspector-hover { background-color: hsl(var(--infra-inspector-bg-hover)); }
@utility bg-infra-inspector-active { background-color: hsl(var(--infra-inspector-bg-active)); }
@utility border-infra-inspector { border-color: hsl(var(--infra-inspector-border)); }
@utility border-infra-inspector-hover { border-color: hsl(var(--infra-inspector-border-hover)); }
@utility text-infra-inspector { color: hsl(var(--infra-inspector-text)); }
@utility text-infra-inspector-secondary { color: hsl(var(--infra-inspector-text-secondary)); }

/* Sidebar utilities */
@utility bg-infra-sidebar { background-color: hsl(var(--infra-sidebar-bg)); }
@utility bg-infra-sidebar-hover { background-color: hsl(var(--infra-sidebar-bg-hover)); }
@utility bg-infra-sidebar-active { background-color: hsl(var(--infra-sidebar-bg-active)); }
@utility border-infra-sidebar { border-color: hsl(var(--infra-sidebar-border)); }
@utility border-infra-sidebar-hover { border-color: hsl(var(--infra-sidebar-border-hover)); }
@utility text-infra-sidebar { color: hsl(var(--infra-sidebar-text)); }
@utility text-infra-sidebar-secondary { color: hsl(var(--infra-sidebar-text-secondary)); }

/* Minimap utilities */
@utility bg-infra-minimap { background-color: hsl(var(--infra-minimap-bg)); }
@utility bg-infra-minimap-hover { background-color: hsl(var(--infra-minimap-bg-hover)); }
@utility border-infra-minimap { border-color: hsl(var(--infra-minimap-border)); }
@utility border-infra-minimap-hover { border-color: hsl(var(--infra-minimap-border-hover)); }
@utility text-infra-minimap { color: hsl(var(--infra-minimap-text)); }

/* History utilities */
@utility bg-infra-history { background-color: hsl(var(--infra-history-bg)); }
@utility bg-infra-history-hover { background-color: hsl(var(--infra-history-bg-hover)); }
@utility border-infra-history { border-color: hsl(var(--infra-history-border)); }
@utility border-infra-history-hover { border-color: hsl(var(--infra-history-border-hover)); }
@utility text-infra-history { color: hsl(var(--infra-history-text)); }

/* Toolbar utilities */
@utility bg-infra-toolbar { background-color: hsl(var(--infra-toolbar-bg)); }
@utility bg-infra-toolbar-hover { background-color: hsl(var(--infra-toolbar-bg-hover)); }
@utility border-infra-toolbar { border-color: hsl(var(--infra-toolbar-border)); }
@utility border-infra-toolbar-hover { border-color: hsl(var(--infra-toolbar-border-hover)); }
@utility text-infra-toolbar { color: hsl(var(--infra-toolbar-text)); }

/* Panel utilities */
@utility bg-infra-panel { background-color: hsl(var(--infra-panel-bg)); }
@utility bg-infra-panel-hover { background-color: hsl(var(--infra-panel-bg-hover)); }
@utility border-infra-panel { border-color: hsl(var(--infra-panel-border)); }
@utility border-infra-panel-hover { border-color: hsl(var(--infra-panel-border-hover)); }
@utility text-infra-panel { color: hsl(var(--infra-panel-text)); }

/* NEW: Effect utilities for glow effects */
@utility shadow-effect-glow-selection { box-shadow: var(--effect-glow-selection); }
@utility shadow-effect-glow-hover { box-shadow: var(--effect-glow-hover); }
@utility shadow-effect-glow-activation { box-shadow: var(--effect-glow-activation); }
@utility shadow-effect-glow-error { box-shadow: var(--effect-glow-error); }
@utility shadow-effect-glow-subtle { box-shadow: var(--effect-glow-subtle); }
@utility shadow-effect-glow-normal { box-shadow: var(--effect-glow-normal); }
@utility shadow-effect-glow-strong { box-shadow: var(--effect-glow-strong); }
@utility shadow-effect-glow-blue { box-shadow: var(--effect-glow-blue); }
@utility shadow-effect-glow-green { box-shadow: var(--effect-glow-green); }
@utility shadow-effect-glow-red { box-shadow: var(--effect-glow-red); }

/* NEW: Action status utilities */
@utility bg-status-node-add { background-color: hsl(var(--status-node-add-bg)); }
@utility border-status-node-add { border-color: hsl(var(--status-node-add-border)); }
@utility bg-status-node-delete { background-color: hsl(var(--status-node-delete-bg)); }
@utility border-status-node-delete { border-color: hsl(var(--status-node-delete-border)); }
@utility bg-status-node-update { background-color: hsl(var(--status-node-update-bg)); }
@utility border-status-node-update { border-color: hsl(var(--status-node-update-border)); }
@utility bg-status-edge-add { background-color: hsl(var(--status-edge-add-bg)); }
@utility border-status-edge-add { border-color: hsl(var(--status-edge-add-border)); }
@utility bg-status-edge-delete { background-color: hsl(var(--status-edge-delete-bg)); }
@utility border-status-edge-delete { border-color: hsl(var(--status-edge-delete-border)); }
@utility bg-status-bulk-update { background-color: hsl(var(--status-bulk-update-bg)); }
@utility border-status-bulk-update { border-color: hsl(var(--status-bulk-update-border)); }
@utility bg-status-special { background-color: hsl(var(--status-special-bg)); }
@utility border-status-special { border-color: hsl(var(--status-special-border)); }

/* NEW: Sizing utilities for nodes */
@utility w-node-size-fe1h { width: var(--node-size-fe1h-width); }
@utility h-node-size-fe1h { height: var(--node-size-fe1h-height); }
@utility w-node-size-compact { width: var(--node-size-compact-width); }
@utility h-node-size-compact { height: var(--node-size-compact-height); }
@utility w-node-size-expanded { width: var(--node-size-expanded-width); }
@utility h-node-size-expanded { height: var(--node-size-expanded-height); }
@utility w-node-size-default { width: var(--node-size-default-width); }
@utility h-node-size-default { height: var(--node-size-default-height); }

/* Hover effects that adapt to theme */
@utility hover-brighten  { 
  &:hover { 
    background-color: hsl(var(--accent) / 0.8); 
  }
  .light &:hover { 
    background-color: hsl(var(--accent) / 0.6); 
  }
}

@utility hover-node-effect { 
  &:hover { 
    background-color: hsl(var(--accent) / 0.4);
    border-color: hsl(var(--accent-foreground) / 0.3);
  }
  .light &:hover { 
    background-color: hsl(var(--accent) / 0.8);
    border-color: hsl(var(--accent-foreground) / 0.4);
  }
}

/* trigger the twin transparency sweeps */
@utility animate-fill-transparency {
  animation: var(--animate-fill-transparency);
}

@utility animate-scroll-x-loop {
  animation: scroll-x-loop var(--ticker-duration) linear infinite;
}

/* rotating border (unchanged) */
@utility bg-spinning-border {
  background:
    conic-gradient(from var(--angle), #213, #112 5%, #112 60%, #213 95%) padding-box,
    conic-gradient(from var(--angle), transparent 25%, #08f, #f03 95%, transparent) border-box,
    conic-gradient(from var(--angle), #213, #112 5%, #112 60%, #213 95%) border-box;
}

/* border that fills from both edges toward centre */
@utility bg-fill-border {
  background:
    linear-gradient(360deg, background, background) padding-box,

    /* right sweep (sentinel stop so var() isn't last) */
    conic-gradient(
      from var(--fill-angle-right),
      transparent var(--fill-transparency-right),
      #08f,
      #f03 100%,
      transparent,
      rgba(0,0,0,0) 100%) border-box,

    /* left sweep (same pattern) */
    conic-gradient(
      from var(--fill-angle-left),
      #f03,
      #08f,
      transparent calc(var(--fill-transparency-left) - 1%),
      rgba(0,0,0,0) 100%) border-box;
}

/* same stack without base colour — good for text clips */
@utility bg-fill-content {
  background:
    conic-gradient(
      from var(--fill-angle-right),
      transparent var(--fill-transparency-right),
      #08f,
      #f03 100%,
      transparent,
      rgba(0,0,0,0) 100%) border-box,
    conic-gradient(
      from var(--fill-angle-left),
      #f03,
      #08f,
      transparent calc(var(--fill-transparency-left) - 1%),
      rgba(0,0,0,0) 100%) border-box;
}

@utility grid-12 {
  grid-template-columns: repeat(12, minmax(0, 1fr));
  margin-left: 16px;
  margin-right: 16px;
}

@media (min-width: 768px) {
  .grid-12 {
    margin-left: 24px;
    margin-right: 24px;
  }
}

@media (min-width: 1024px) {
  .grid-12 {
    margin-left: auto;
    margin-right: auto;
    max-width: 1280px;
  }
}


/* DEBUG UTILITIES */
@utility debug-red {
  border: 2px solid red;
}

@utility debug-blue {
  border: 2px solid blue;
}

@utility debug-green {
  border: 2px solid green;
}

@utility debug-yellow {
  border: 2px solid yellow;
}

@utility debug-purple {
  border: 2px solid purple;
}

@utility debug-orange {
  border: 2px solid orange;
}
/* 6 · Base layer ---------------------------------------------------- */
@layer base {
  *, ::before, ::after, ::backdrop, ::file-selector-button { @apply border-border; }

  html.light {
    --background : 0 0% 100%;
    --foreground : 222 47% 11%;
    --border     : 220 14% 75%;
    --primary    : 222 47% 11%;
    --primary-foreground : 0 0% 100%;
    --secondary  : 220 14% 96%;
    --secondary-foreground : 222 47% 11%;
    --muted      : 220 14% 96%;
    --muted-foreground : 220 9% 46%;
    --accent     : 220 14% 85%;
    --accent-foreground : 222 47% 11%;
    --destructive : 0 84% 60%;
    --destructive-foreground : 0 0% 98%;
    --ring       : 220 14% 75%;
    --card       : 0 0% 100%;
    --card-foreground : 222 47% 11%;
    --popover    : 0 0% 100%;
    --popover-foreground : 222 47% 11%;
  }

  body { @apply bg-background text-foreground antialiased; }

  .font-ui    { font-family: var(--font-ui);    }
  .font-serif { font-family: var(--font-serif); }
  .font-brand { font-family: var(--font-brand); font-weight:700; }
}

/* -------------------------------------------------------------------
   Example usage (remove in real code)
.element {
  @apply bg-fill-border hover:animate-fill-transparency;
}
------------------------------------------------------------------- */



