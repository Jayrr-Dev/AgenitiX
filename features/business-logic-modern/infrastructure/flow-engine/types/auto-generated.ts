/**
 * AUTO-GENERATED TYPES - Dynamically generated TypeScript definitions
 *
 * • Auto-generated TypeScript interfaces from enhanced registry system
 * • Demonstrates build-time type generation capabilities
 * • Provides type-safe node data interfaces from registry metadata
 * • Shows potential for automated TypeScript code generation
 * • Example implementation of registry-driven type system
 *
 * Keywords: auto-generated, TypeScript, registry-driven, build-time, type-generation, metadata
 */

// This file demonstrates auto-generated TypeScript interfaces
// In a full implementation, this would be generated automatically during build

import type { Node, Position } from "@xyflow/react";
import { generateTypeDefinitions } from "../../nodes/nodeRegistry";

// ============================================================================
// AUTO-GENERATED INTERFACES (Example)
// ============================================================================

export interface ViewOutputData {
  label: string;
  isActive: boolean;
  displayedValues: Array<{ type: string; content: any; id: string }>;
}

export interface ViewOutputRefactorData {
  displayedValues: Array<{ type: string; content: any; id: string }>;
  isActive: boolean;
}

export interface CreateTextEnhancedData {
  text: string;
  output: string;
  isEnabled: boolean;
  prefix: string;
  maxLength: number;
  isActive: boolean;
}

export interface TriggerOnToggleRefactorData {
  triggered: boolean;
  value: boolean;
  outputValue: boolean;
  type: string;
  label: string;
  inputCount: number;
  hasExternalInputs: boolean;
  isActive: boolean;
}

// ============================================================================
// AUTO-GENERATED UNION TYPE (Example)
// ============================================================================

export type AutoGeneratedAgenNode =
  | (Node<ViewOutputData & Record<string, unknown>> & {
      type: "viewOutput";
      targetPosition: Position;
    })
  | (Node<ViewOutputRefactorData & Record<string, unknown>> & {
      type: "viewOutputRefactor";
      targetPosition: Position;
    })
  | (Node<CreateTextEnhancedData & Record<string, unknown>> & {
      type: "createTextEnhanced";
    })
  | (Node<TriggerOnToggleRefactorData & Record<string, unknown>> & {
      type: "triggerOnToggleRefactor";
    });

// ============================================================================
// UTILITY TO GET RAW GENERATED CODE
// ============================================================================

export const getGeneratedTypeDefinitions = () => {
  return generateTypeDefinitions();
};

// Example usage:
// console.log(getGeneratedTypeDefinitions());
