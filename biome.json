{
	"$schema": "https://biomejs.dev/schemas/1.9.4/schema.json",
	"vcs": {
		"enabled": true,
		"clientKind": "git",
		"useIgnoreFile": true,
		"defaultBranch": "main"
	},
	"files": {
		"ignoreUnknown": true,
		"ignore": [
			"node_modules/**",
			".next/**",
			"dist/**",
			"build/**",
			"coverage/**",
			".vercel/**",
			"convex/_generated/**",
			"generated/**",
			"*.min.js",
			"*.min.css",
			".github/**",
			".husky/**",
			"src/components/ui/**",
			"*.config.ts",
			"*.config.js",
			"*.config.mjs",
			"backups/**",
			"app/styles/_generated_tokens.css",
			"public/sw.js",
			"public/workbox-*.js"
		]
	},
	"formatter": {
		"enabled": true,
		"indentStyle": "tab",
		"lineWidth": 100
	},
	"organizeImports": {
		"enabled": true
	},
	"linter": {
		"enabled": true,
		"rules": {
			"recommended": true,
			"style": {
				"noUnusedTemplateLiteral": "warn",
				"useTemplate": "warn",
				"useConst": "warn",
				"useShorthandArrayType": "warn",
				"useShorthandAssign": "warn",
				"noImplicitBoolean": "warn",
				"noNegationElse": "warn",
				"useBlockStatements": "warn",
				"useCollapsedElseIf": "warn",
				"useConsistentArrayType": "warn",
				"useFilenamingConvention": {
					"level": "error",
					"options": {
						"strictCase": true,
						"requireAscii": true,
						"filenameCases": [
							"kebab-case",
							"PascalCase"
						]
					}
				},
				"useNamingConvention": {
					"level": "error",
					"options": {
						"strictCase": false,
						"requireAscii": true,
						"enumMemberCase": "CONSTANT_CASE",
						"conventions": [
							{
								"selector": {
									"kind": "function"
								},
								"formats": ["camelCase", "PascalCase"]
							},
							{
								"selector": {
									"kind": "variable"
								},
								"formats": ["camelCase", "PascalCase"]
							},
							{
								"selector": {
									"kind": "functionParameter"
								},
								"formats": ["camelCase"]
							},
							{
								"selector": {
									"kind": "classMember",
									"modifiers": [
										"private"
									]
								},
								"formats": ["camelCase"]
							},
							{
								"selector": {
									"kind": "classMember",
									"modifiers": [
										"protected"
									]
								},
								"formats": ["camelCase"]
							},
							{
								"selector": {
									"kind": "objectLiteralProperty"
								},
								"formats": ["camelCase"]
							},
							{
								"selector": {
									"kind": "objectLiteralMethod"
								},
								"formats": ["camelCase"]
							},
							{
								"selector": {
									"kind": "typeAlias"
								},
								"formats": ["PascalCase"]
							},
							{
								"selector": {
									"kind": "interface"
								},
								"formats": ["PascalCase"]
							},
							{
								"selector": {
									"kind": "class"
								},
								"formats": ["PascalCase"]
							},
							{
								"selector": {
									"kind": "enum"
								},
								"formats": ["PascalCase"]
							}
						]
					}
				},
				"noParameterAssign": "warn"
			},
			"suspicious": {
				"noConsoleLog": "off",
				"noExplicitAny": "off",
				"noArrayIndexKey": "warn",
				"noCommentText": "warn",
				"noDoubleEquals": "error",
				"noThenProperty": "error",
				"useAwait": "error",
				"useValidTypeof": "error",
				"noAssignInExpressions": "warn"
			},
			"complexity": {
				"noExcessiveCognitiveComplexity": "off",
				"noExcessiveNestedTestSuites": "warn",
				"noMultipleSpacesInRegularExpressionLiterals": "warn",
				"noUselessCatch": "warn",
				"noUselessConstructor": "warn",
				"noUselessEmptyExport": "warn",
				"noUselessFragments": "warn",
				"noUselessLabel": "warn",
				"noUselessLoneBlockStatements": "warn",
				"noUselessRename": "warn",
				"noUselessSwitchCase": "warn",
				"noUselessTernary": "warn",
				"noUselessThisAlias": "warn",
				"noUselessTypeConstraint": "warn",
				"noVoid": "warn",
				"noWith": "error",
				"noForEach": "off",
				"useLiteralKeys": "warn",
				"useOptionalChain": "warn",
				"useRegexLiterals": "warn",
				"useSimpleNumberKeys": "warn",
				"useSimplifiedLogicExpression": "warn"
			},
			"correctness": {
				"noUnusedVariables": "warn",
				"noUnusedImports": "error",
				"noUndeclaredVariables": "error",
				"noUnreachable": "warn",
				"noConstAssign": "error",
				"noConstantCondition": "error",
				"noEmptyCharacterClassInRegex": "error",
				"noEmptyPattern": "error",
				"noInvalidConstructorSuper": "error",
				"noNewSymbol": "error",
				"noNonoctalDecimalEscape": "error",
				"noPrecisionLoss": "error",
				"noSetterReturn": "error",
				"noSwitchDeclarations": "error",
				"noUnnecessaryContinue": "warn",
				"noUnreachableSuper": "error",
				"noUnsafeFinally": "error",
				"noUnsafeOptionalChaining": "error",
				"noUnusedLabels": "warn",
				"useArrayLiterals": "warn",
				"useExhaustiveDependencies": "off",
				"useIsNan": "error",
				"useValidForDirection": "error",
				"useYield": "error"
			},
			"performance": {
				"noDelete": "warn",
				"noAccumulatingSpread": "warn"
			},
			"security": {
				"noDangerouslySetInnerHtml": "error",
				"noDangerouslySetInnerHtmlWithChildren": "error"
			},
			"a11y": {
				"noAccessKey": "warn",
				"noAriaUnsupportedElements": "warn",
				"noAutofocus": "warn",
				"noBlankTarget": "warn",
				"noDistractingElements": "warn",
				"noHeaderScope": "warn",
				"noPositiveTabindex": "warn",
				"noRedundantAlt": "warn",
				"noRedundantRoles": "warn",
				"useAltText": "warn",
				"useAnchorContent": "warn",
				"useAriaPropsForRole": "warn",
				"useButtonType": "warn",
				"useHeadingContent": "warn",
				"useHtmlLang": "error",
				"useIframeTitle": "warn",
				"useKeyWithClickEvents": "warn",
				"useKeyWithMouseEvents": "warn",
				"useMediaCaption": "warn",
				"useValidAnchor": "warn",
				"useValidAriaProps": "error",
				"useValidAriaValues": "error",
				"useValidLang": "error",
				"noSvgWithoutTitle": "warn"
			},
			"nursery": {
				"useConsistentMemberAccessibility": "warn",
				"useSortedClasses": "off"
			}
		}
	},
	"javascript": {
		"formatter": {
			"quoteStyle": "double",
			"trailingCommas": "es5",
			"semicolons": "always",
			"arrowParentheses": "always",
			"bracketSpacing": true,
			"bracketSameLine": false,
			"quoteProperties": "asNeeded",
			"attributePosition": "auto"
		}
	},
	"overrides": [
		{
			"include": [
				"features/business-logic-modern/**/*.{ts,tsx}"
			],
			"linter": {
				"rules": {
					"style": {
						"noUnusedTemplateLiteral": "warn"
					},
					"suspicious": {
						"noConsoleLog": "off"
					}
				}
			}
		},
		{
			"include": [
				"app/api/**/*.{ts,tsx}"
			],
			"linter": {
				"rules": {
					"suspicious": {
						"noConsoleLog": "off"
					}
				}
			}
		},
		{
			"include": [
				"scripts/**/*.{ts,js}"
			],
			"linter": {
				"rules": {
					"suspicious": {
						"noConsoleLog": "off"
					}
				}
			}
		},
		{
			"include": [
				"**/*.config.{ts,js,mjs}"
			],
			"linter": {
				"rules": {
					"style": {
						"useFilenamingConvention": "off",
						"useNamingConvention": "off"
					}
				}
			}
		},
		{
			"include": [
				"components/**/*.{ts,tsx}"
			],
			"linter": {
				"rules": {
					"style": {
						"useFilenamingConvention": {
							"level": "error",
							"options": {
								"strictCase": true,
								"requireAscii": true,
								"filenameCases": [
									"PascalCase"
								]
							}
						}
					}
				}
			}
		},
		{
			"include": [
				"hooks/**/*.{ts,tsx}",
				"**/hooks/**/*.{ts,tsx}"
			],
			"linter": {
				"rules": {
					"style": {
						"useFilenamingConvention": {
							"level": "error",
							"options": {
								"strictCase": true,
								"requireAscii": true,
								"filenameCases": [
									"camelCase"
								]
							}
						}
					}
				}
			}
		},
		{
			"include": [
				"lib/**/*.{ts,tsx}",
				"utils/**/*.{ts,tsx}",
				"types/**/*.{ts,tsx}",
				"constants/**/*.{ts,tsx}"
			],
			"linter": {
				"rules": {
					"style": {
						"useFilenamingConvention": {
							"level": "error",
							"options": {
								"strictCase": true,
								"requireAscii": true,
								"filenameCases": [
									"kebab-case"
								]
							}
						}
					}
				}
			}
		},
		{
			"include": [
				"features/business-logic-modern/node-domain/**/*.{ts,tsx}"
			],
			"linter": {
				"rules": {
					"style": {
						"useFilenamingConvention": {
							"level": "error",
							"options": {
								"strictCase": true,
								"requireAscii": true,
								"filenameCases": [
									"camelCase"
								]
							}
						},
						"useNamingConvention": {
							"level": "error",
							"options": {
								"strictCase": false,
								"requireAscii": true,
								"conventions": [
									{
										"selector": {
											"kind": "function"
										},
										"formats": ["camelCase"]
									},
									{
										"selector": {
											"kind": "variable"
										},
										"formats": ["camelCase"]
									}
								]
							}
						}
					}
				}
			}
		},
		{
			"include": [
				"convex/**/*.{ts,tsx}"
			],
			"linter": {
				"rules": {
					"style": {
						"useFilenamingConvention": {
							"level": "error",
							"options": {
								"strictCase": true,
								"requireAscii": true,
								"filenameCases": [
									"kebab-case"
								]
							}
						},
						"useNamingConvention": {
							"level": "error",
							"options": {
								"strictCase": false,
								"requireAscii": true,
								"conventions": [
									{
										"selector": {
											"kind": "function"
										},
										"formats": ["camelCase"]
									},
									{
										"selector": {
											"kind": "variable"
										},
										"formats": ["camelCase"]
									},
									{
										"selector": {
											"kind": "objectLiteralProperty"
										},
										"formats": ["camelCase"]
									}
								]
							}
						}
					}
				}
			}
		},
		{
			"include": [
				"app/layout.tsx"
			],
			"linter": {
				"rules": {
					"security": {
						"noDangerouslySetInnerHtml": "off"
					}
				}
			}
		},
		{
			"include": [
				"components/ui/**/*.{ts,tsx}"
			],
			"linter": {
				"rules": {
					"a11y": {
						"useButtonType": "off",
						"noSvgWithoutTitle": "off"
					}
				}
			}
		},
		{
			"include": [
				"features/business-logic-modern/infrastructure/theming/**/*.{ts,tsx}",
				"features/business-logic-modern/infrastructure/components/ClearLocalStorage.tsx",
				"features/business-logic-modern/infrastructure/node-inspector/utils/**/*.{ts,tsx}",
				"scripts/**/*.{ts,tsx}",
				"tooling/**/*.{ts,tsx}"
			],
			"linter": {
				"rules": {
					"a11y": {
						"useButtonType": "off",
						"noSvgWithoutTitle": "off"
					}
				}
			}
		},
		{
			"include": [
				"features/business-logic-modern/infrastructure/node-inspector/controls/**/*.{ts,tsx}",
				"features/business-logic-modern/infrastructure/node-inspector/components/DynamicControls.tsx",
				"features/business-logic-modern/infrastructure/node-inspector/components/EdgeInspector.tsx",
				"features/business-logic-modern/infrastructure/node-inspector/components/EditableJsonEditor.tsx",
				"features/business-logic-modern/infrastructure/sidebar/components/NodeSearchModal.tsx",
				"features/business-logic-modern/infrastructure/sidebar/SortableStencil.tsx",
				"features/business-logic-modern/infrastructure/sidebar/SidebarTabs.tsx",
				"features/business-logic-modern/infrastructure/sidebar/SidebarVariantSelector.tsx"
			],
			"linter": {
				"rules": {
					"a11y": {
						"useButtonType": "off"
					}
				}
			}
		},
		{
			"include": [
				".kiro/steering/**/*.md",
				"documentation/**/*.md",
				"**/*.md"
			],
			"linter": {
				"rules": {
					"style": {
						"useFilenamingConvention": {
							"level": "error",
							"options": {
								"strictCase": true,
								"requireAscii": true,
								"filenameCases": [
									"kebab-case"
								]
							}
						}
					}
				}
			}
		},
		{
			"include": [
				"app/**/*.{ts,tsx}"
			],
			"linter": {
				"rules": {
					"style": {
						"useFilenamingConvention": {
							"level": "error",
							"options": {
								"strictCase": true,
								"requireAscii": true,
								"filenameCases": [
									"kebab-case",
									"PascalCase"
								]
							}
						}
					}
				}
			}
		},
		{
			"include": [
				"**/*.spec.{ts,tsx}",
				"**/*.test.{ts,tsx}",
				"**/__tests__/**/*.{ts,tsx}"
			],
			"linter": {
				"rules": {
					"style": {
						"useFilenamingConvention": {
							"level": "error",
							"options": {
								"strictCase": true,
								"requireAscii": true,
								"filenameCases": [
									"kebab-case",
									"camelCase"
								]
							}
						}
					}
				}
			}
		}
	]
}